<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tsb.mbg.dao.SysRoleMapper">

  <!--<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>-->
  <cache type="org.mybatis.caches.redis.RedisCache"/>

  <resultMap id="BaseResultMap" type="com.tsb.mbg.entity.SysRole">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
    <result column="enabled" jdbcType="INTEGER" property="enabled"/>
    <result column="create_by" jdbcType="BIGINT" property="createBy"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
  </resultMap>


  <!--鉴别器-->
  <resultMap id="RolePrivilegeListMapChoose" type="com.tsb.mbg.entity.SysRole">
    <discriminator column="enabled" javaType="int">
      <!--1表示状态可用, 0不可用; 当可用时可以查询角色下详细的权限信息, 当不可用时只能查询角色基本信息-->
      <case value="1" resultMap="com.tsb.mbg.dao.SysRoleMapper.RolePrivilegeListMapSelect"/>
      <case value="0" resultMap="com.tsb.mbg.dao.SysRoleMapper.BaseResultMap"/>
    </discriminator>
  </resultMap>

  <select id="selectRoleByUserIdChoose" resultMap="RolePrivilegeListMapChoose">
    select r.id,
           r.role_name,
           r.enabled,
           r.create_by,
           r.create_time
    from sys_role r
           inner join sys_user_role ur on ur.user_id = r.id
    where ur.user_id = #{userId}
  </select>


  <resultMap id="RoleMap" type="com.tsb.mbg.entity.SysRole">
    <id property="id" column="id"/>
    <result property="roleName" column="role_name"/>
    <result property="enabled" column="enabled"/>
    <association property="createInfo">
      <result property="createBy" column="create_by"/>
      <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </association>
  </resultMap>

  <select id="selectAllRole" resultMap="RoleMap">
    select r.id,
           r.role_name,
           r.enabled,
           r.create_by,
           r.create_time
    from sys_role r
  </select>

  <select id="selectPrivilegeByRoleId" resultMap="com.tsb.mbg.dao.SysPrivilegeMapper.BaseResultMap">
    select p.*
    from sys_privilege p
           inner join sys_role_privilege rp on rp.privilege_id = p.id
    where role_id = #{roleId}
  </select>
  <resultMap id="RolePrivilegeListMapSelect" extends="RoleMap" type="com.tsb.mbg.entity.SysRole">
    <!--id是selectRoleByUserId中通过userId查询出的roleId
      roleId为select="selectPrivilegeByRoleId"中查询的参数-->
    <collection property="sysPrivilegeList"
                fetchType="lazy"
                column="{roleId=id}"
                select="selectPrivilegeByRoleId"/>
  </resultMap>
  <select id="selectRoleByUserId" resultMap="RolePrivilegeListMapSelect">
    select r.id,
           r.role_name,
           r.enabled,
           r.create_by,
           r.create_time
    from sys_role r
           inner join sys_user_role ur on ur.role_id = r.id
    where ur.user_id = #{userId}
  </select>


  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, role_name, enabled, create_by, create_time
  </sql>
  <select id="selectByExample" parameterType="com.tsb.mbg.entity.SysRoleExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow != null">
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List"/>
    from sys_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sys_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.tsb.mbg.entity.SysRoleExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="com.tsb.mbg.entity.SysRole">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sys_role (id, role_name, enabled,
    create_by, create_time)
    values (#{id,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{enabled,jdbcType=INTEGER},
    #{createBy,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.tsb.mbg.entity.SysRole">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tsb.mbg.entity.SysRoleExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_role
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_role
    set id = #{record.id,jdbcType=BIGINT},
    role_name = #{record.roleName,jdbcType=VARCHAR},
    enabled = #{record.enabled,jdbcType=INTEGER},
    create_by = #{record.createBy,jdbcType=BIGINT},
    create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tsb.mbg.entity.SysRole">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tsb.mbg.entity.SysRole">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
    enabled = #{enabled,jdbcType=INTEGER},
    create_by = #{createBy,jdbcType=BIGINT},
    create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <cache eviction="LRU" size="1024">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
  </cache>

  <select id="selectRoleById" resultMap="BaseResultMap">
    select *
    from sys_role
    where id = #{id}
  </select>
</mapper>